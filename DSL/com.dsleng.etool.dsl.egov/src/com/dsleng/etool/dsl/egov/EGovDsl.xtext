// automatically generated by Xtext
grammar com.dsleng.etool.dsl.egov.EGovDsl with org.eclipse.xtext.common.Terminals


import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://com/dsleng/etool/models/egov" as egov

Dept returns egov::Dept:
	{egov::Dept}
	'Department'
	'Name=' name=EString
	'{'
		('BusinessObjects' '{' businessobjects+=BusinessObject ( "," businessobjects+=BusinessObject)* '}' )?
		('EServices' '{' eservices+=EService ( "," eservices+=EService)* '}' )?
	'}';


EString returns ecore::EString:
	STRING | ID;

EService returns egov::EService:
	{egov::EService}
	'EService='
	name=EString
	'{'
		('Pages' '{' pages+=Page ( "," pages+=Page)* '}' )?
	'}';

BusinessObject returns egov::BusinessObject:
	{egov::BusinessObject}
	'BO=' name=EString
	'{'
		('attributes' '{' attributes+=Attribute ( "," attributes+=Attribute)* '}' )?
		('references' '{' references+=References ( "," references+=References)* '}' )?
	'}';

Page returns egov::Page:
	'Page='
	name=EString
	'{'
		'BO' businessobject=[egov::BusinessObject|EString]
		('=>' nextPage=[egov::Page|EString])?
	'}';

Attribute returns egov::Attribute:
	{egov::Attribute}
	name=EString
	'{'
		('Label=' label=EString)?
		('Type=' type=DataTypes)?
	'}';

References returns egov::References:
	{egov::References}
	'BO=' businessobject=[egov::BusinessObject|EString]
	'['
		('Inclusion=' Inclusion=Inclusions)?
		('Multiplicity=' multiplicity=Multiplicity)?
	']';

enum DataTypes returns egov::DataTypes:
				Integer = 'Integer' | String = 'String';

enum Inclusions returns egov::Inclusions:
				Mandatory = 'Mandatory' | Optional = 'Optional';

enum Multiplicity returns egov::Multiplicity:
				OnlyOne = 'OnlyOne' | Many = 'Many';
