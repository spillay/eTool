// automatically generated by Xtext
grammar com.dsleng.etool.dsl.egov.EGovDsl with org.eclipse.xtext.common.Terminals


import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://com/dsleng/etool/models/egov"
import "http://com/dsleng/etool/models/controls" as controls
import "http://com/dsleng/etool/models/bobjs" as bobjs


EService returns EService:
	{EService}
	'EService='
	name=EString
	'setup {'
		'Deployment Directory' dirLocation=EString
		'Business Unit' BusinessUnit=[bobjs::OrgUnit|EString]
		 (imports+=Import)*
	'}'
	'{'
		('Pages' '{' pages+=Page ( "," pages+=Page)* '}' )?
		'Start Page' indexPage=[Page|EString]
	'}';

Import returns Import: 
	'import' importURI=STRING;

EString returns ecore::EString:
	STRING | ID;

Page returns Page:
	'PageName='name=EString 'PageTitle'title=EString ('PageType='pagetype=[controls::PageType])?
		('{' BOMaps+=BOMaps ( "," BOMaps+=BOMaps)* '}' )?
		('Content Sections' ('North=' North=EString)? ('South=' South=EString)? ('West=' West=EString)? ('East=' East=EString)?)?
		('Standalone Controls {' extraControls+=[controls::AttributeType|EString] ( "," extraControls+=[controls::AttributeType|EString])* '}' )?
		('=>' nextPage=[Page|EString])?
;

BOMaps returns BOMapper:
	{BOMapper}
	'BusinessObject=' BusinessObject=[bobjs::BusinessObject|EString]
	('BOType='botype=[controls::BOType])?
	('Modified Attributes' '{' attributes+=Attribute ( "," attributes+=Attribute)* '}' )?
;

Attribute returns BOAttribute:
	{BOAttribute}
	'Attribute=' attribute=[bobjs::Attribute|EString]
	'ControlType=' controltype=[controls::AttributeType|EString] 
	'{' ('ControlMappers' '[' controlparameters+=ControlMapper ( "," controlparameters+=ControlMapper)* ']' )?
	('PredefinedContainers ' '[' predefinedcontainers+=PreDefinedContainer ( "," predefinedcontainers+=PreDefinedContainer)* ']' )?
	'}'
;
ControlMapper returns ControlMapper:
	{ControlMapper}
	mappedTo='Name' 'mapsTo' option=[controls::Options|EString] |
	mappedTo='Type' 'mapsTo' option=[controls::Options|EString] |
	mappedTo='Label' 'mapsTo' option=[controls::Options|EString] |
	mappedTo='DataContainer' 'mapsTo' option=[controls::Options|EString] 
;
PreDefinedContainer returns PreDefinedContainer: 
	name=EString '(' predefinedvalues+=PreDefinedValue ( "," predefinedvalues+=PreDefinedValue)* ')'
;

PreDefinedValue returns PreDefinedValue: 
	{PreDefinedValue}
	value=EString
;

