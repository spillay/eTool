/*
 * generated by Xtext
 */
package com.dsleng.etool.xtext.presentation.view.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.dsleng.etool.xtext.presentation.view.services.ViewDslGrammarAccess;

public class ViewDslParser extends AbstractContentAssistParser {
	
	@Inject
	private ViewDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.dsleng.etool.xtext.presentation.view.ui.contentassist.antlr.internal.InternalViewDslParser createParser() {
		com.dsleng.etool.xtext.presentation.view.ui.contentassist.antlr.internal.InternalViewDslParser result = new com.dsleng.etool.xtext.presentation.view.ui.contentassist.antlr.internal.InternalViewDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getLayersAccess().getAlternatives(), "rule__Layers__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getLayoutPositionAccess().getAlternatives(), "rule__LayoutPosition__Alternatives");
					put(grammarAccess.getPageAccess().getGroup(), "rule__Page__Group__0");
					put(grammarAccess.getLayoutAccess().getGroup(), "rule__Layout__Group__0");
					put(grammarAccess.getLayoutAccess().getGroup_3(), "rule__Layout__Group_3__0");
					put(grammarAccess.getLayoutAccess().getGroup_3_3(), "rule__Layout__Group_3_3__0");
					put(grammarAccess.getLayers_ImplAccess().getGroup(), "rule__Layers_Impl__Group__0");
					put(grammarAccess.getLayers_ImplAccess().getGroup_4(), "rule__Layers_Impl__Group_4__0");
					put(grammarAccess.getLayers_ImplAccess().getGroup_5(), "rule__Layers_Impl__Group_5__0");
					put(grammarAccess.getLayers_ImplAccess().getGroup_6(), "rule__Layers_Impl__Group_6__0");
					put(grammarAccess.getLayers_ImplAccess().getGroup_7(), "rule__Layers_Impl__Group_7__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getHorizontalAccess().getGroup(), "rule__Horizontal__Group__0");
					put(grammarAccess.getHorizontalAccess().getGroup_4(), "rule__Horizontal__Group_4__0");
					put(grammarAccess.getHorizontalAccess().getGroup_5(), "rule__Horizontal__Group_5__0");
					put(grammarAccess.getHorizontalAccess().getGroup_6(), "rule__Horizontal__Group_6__0");
					put(grammarAccess.getHorizontalAccess().getGroup_7(), "rule__Horizontal__Group_7__0");
					put(grammarAccess.getHorizontalAccess().getGroup_8(), "rule__Horizontal__Group_8__0");
					put(grammarAccess.getVerticalAccess().getGroup(), "rule__Vertical__Group__0");
					put(grammarAccess.getVerticalAccess().getGroup_4(), "rule__Vertical__Group_4__0");
					put(grammarAccess.getVerticalAccess().getGroup_5(), "rule__Vertical__Group_5__0");
					put(grammarAccess.getVerticalAccess().getGroup_6(), "rule__Vertical__Group_6__0");
					put(grammarAccess.getVerticalAccess().getGroup_7(), "rule__Vertical__Group_7__0");
					put(grammarAccess.getVerticalAccess().getGroup_8(), "rule__Vertical__Group_8__0");
					put(grammarAccess.getContentAccess().getGroup(), "rule__Content__Group__0");
					put(grammarAccess.getContentAccess().getGroup_4(), "rule__Content__Group_4__0");
					put(grammarAccess.getContentAccess().getGroup_5(), "rule__Content__Group_5__0");
					put(grammarAccess.getContentAccess().getGroup_6(), "rule__Content__Group_6__0");
					put(grammarAccess.getContentAccess().getGroup_7(), "rule__Content__Group_7__0");
					put(grammarAccess.getContentAccess().getGroup_8(), "rule__Content__Group_8__0");
					put(grammarAccess.getContentAccess().getGroup_9(), "rule__Content__Group_9__0");
					put(grammarAccess.getPageAccess().getLayoutAssignment_3(), "rule__Page__LayoutAssignment_3");
					put(grammarAccess.getLayoutAccess().getLayersAssignment_3_2(), "rule__Layout__LayersAssignment_3_2");
					put(grammarAccess.getLayoutAccess().getLayersAssignment_3_3_1(), "rule__Layout__LayersAssignment_3_3_1");
					put(grammarAccess.getLayers_ImplAccess().getResizableAssignment_1(), "rule__Layers_Impl__ResizableAssignment_1");
					put(grammarAccess.getLayers_ImplAccess().getStyleAssignment_4_1(), "rule__Layers_Impl__StyleAssignment_4_1");
					put(grammarAccess.getLayers_ImplAccess().getPositionAssignment_5_1(), "rule__Layers_Impl__PositionAssignment_5_1");
					put(grammarAccess.getLayers_ImplAccess().getMinSizeAssignment_6_1(), "rule__Layers_Impl__MinSizeAssignment_6_1");
					put(grammarAccess.getLayers_ImplAccess().getMaxSizeAssignment_7_1(), "rule__Layers_Impl__MaxSizeAssignment_7_1");
					put(grammarAccess.getHorizontalAccess().getResizableAssignment_1(), "rule__Horizontal__ResizableAssignment_1");
					put(grammarAccess.getHorizontalAccess().getStyleAssignment_4_1(), "rule__Horizontal__StyleAssignment_4_1");
					put(grammarAccess.getHorizontalAccess().getPositionAssignment_5_1(), "rule__Horizontal__PositionAssignment_5_1");
					put(grammarAccess.getHorizontalAccess().getMinSizeAssignment_6_1(), "rule__Horizontal__MinSizeAssignment_6_1");
					put(grammarAccess.getHorizontalAccess().getMaxSizeAssignment_7_1(), "rule__Horizontal__MaxSizeAssignment_7_1");
					put(grammarAccess.getHorizontalAccess().getHeightAssignment_8_1(), "rule__Horizontal__HeightAssignment_8_1");
					put(grammarAccess.getVerticalAccess().getResizableAssignment_1(), "rule__Vertical__ResizableAssignment_1");
					put(grammarAccess.getVerticalAccess().getStyleAssignment_4_1(), "rule__Vertical__StyleAssignment_4_1");
					put(grammarAccess.getVerticalAccess().getPositionAssignment_5_1(), "rule__Vertical__PositionAssignment_5_1");
					put(grammarAccess.getVerticalAccess().getMinSizeAssignment_6_1(), "rule__Vertical__MinSizeAssignment_6_1");
					put(grammarAccess.getVerticalAccess().getMaxSizeAssignment_7_1(), "rule__Vertical__MaxSizeAssignment_7_1");
					put(grammarAccess.getVerticalAccess().getWidthAssignment_8_1(), "rule__Vertical__WidthAssignment_8_1");
					put(grammarAccess.getContentAccess().getResizableAssignment_1(), "rule__Content__ResizableAssignment_1");
					put(grammarAccess.getContentAccess().getStyleAssignment_4_1(), "rule__Content__StyleAssignment_4_1");
					put(grammarAccess.getContentAccess().getPositionAssignment_5_1(), "rule__Content__PositionAssignment_5_1");
					put(grammarAccess.getContentAccess().getMinSizeAssignment_6_1(), "rule__Content__MinSizeAssignment_6_1");
					put(grammarAccess.getContentAccess().getMaxSizeAssignment_7_1(), "rule__Content__MaxSizeAssignment_7_1");
					put(grammarAccess.getContentAccess().getHeightAssignment_8_1(), "rule__Content__HeightAssignment_8_1");
					put(grammarAccess.getContentAccess().getWidthAssignment_9_1(), "rule__Content__WidthAssignment_9_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.dsleng.etool.xtext.presentation.view.ui.contentassist.antlr.internal.InternalViewDslParser typedParser = (com.dsleng.etool.xtext.presentation.view.ui.contentassist.antlr.internal.InternalViewDslParser) parser;
			typedParser.entryRulePage();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ViewDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ViewDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
